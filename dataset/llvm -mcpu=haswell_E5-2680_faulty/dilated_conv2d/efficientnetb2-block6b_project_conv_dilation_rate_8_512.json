{"filters": 208, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [8, 8], "groups": 1, "input shape": [null, 9, 9, 1248], "output shape": [null, 9, 9, 208], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 7.6607, "power": 29, "CPU0": 26, "DDR_AB": 1, "DDR_CD": 2, "CPU1": 17, "DDR_EF": 1, "DDR_GH": 1, "BLADE": 144}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 74.2047, "power": 108, "CPU0": 105, "DDR_AB": 1, "DDR_CD": 2, "CPU1": 24, "DDR_EF": 1, "DDR_GH": 1, "BLADE": 212}, "tvmgen_default_fused_layout_transform_1": {"time": 1.66686, "power": 43, "CPU0": 40, "DDR_AB": 1, "DDR_CD": 2, "CPU1": 30, "DDR_EF": 1, "DDR_GH": 1, "BLADE": 141}}, "data layout": "NCHW", "batch_size": 512, "time": 74.2047, "power": 108.0, "memory": -1, "relay": "free_var %data: Tensor[(512, 1248, 9, 9), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[8, 8], channels=208, kernel_size=[1, 1])\n"}