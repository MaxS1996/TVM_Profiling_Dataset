{"filters": 64, "kernel": [3, 3], "strides": [1, 1], "padding": "same", "dilation": [4, 4], "groups": 1, "input shape": [null, 56, 56, 64], "output shape": [null, 48, 48, 64], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 1.15872, "power": 21, "CPU0": 19, "DDR_AB": 1, "DDR_CD": 1, "CPU1": 16, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 114}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 48.1053, "power": 70, "CPU0": 68, "DDR_AB": 1, "DDR_CD": 1, "CPU1": 16, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 181}, "tvmgen_default_fused_layout_transform_1": {"time": 0.6929949999999999, "power": 17, "CPU0": 16, "DDR_AB": 1, "DDR_CD": 0, "CPU1": 15, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 112}}, "data layout": "NCHW", "batch_size": 32, "time": 48.1053, "power": 65.0, "memory": -1, "relay": "free_var %data: Tensor[(32, 64, 56, 56), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[4, 4], channels=64, kernel_size=[3, 3])\n"}