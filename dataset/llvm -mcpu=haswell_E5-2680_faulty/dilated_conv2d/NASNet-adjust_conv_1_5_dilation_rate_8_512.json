{"filters": 44, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [8, 8], "groups": 1, "input shape": [null, 14, 14, 264], "output shape": [null, 14, 14, 44], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 3.58684, "power": 54, "CPU0": 47, "DDR_AB": 3, "DDR_CD": 4, "CPU1": 20, "DDR_EF": 1, "DDR_GH": 1, "BLADE": 170}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 19.2277, "power": 98, "CPU0": 94, "DDR_AB": 1, "DDR_CD": 3, "CPU1": 22, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 197}, "tvmgen_default_fused_layout_transform_1": {"time": 0.6944440000000001, "power": 54, "CPU0": 51, "DDR_AB": 1, "DDR_CD": 2, "CPU1": 30, "DDR_EF": 1, "DDR_GH": 1, "BLADE": 152}}, "data layout": "NCHW", "batch_size": 512, "time": 19.2277, "power": 92.0, "memory": -1, "relay": "free_var %data: Tensor[(512, 264, 14, 14), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[8, 8], channels=44, kernel_size=[1, 1])\n"}