{"filters": 24, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [4, 4], "groups": 1, "input shape": [null, 228, 228, 48], "output shape": [null, 228, 228, 24], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 194.866, "power": 88, "CPU0": 79, "DDR_AB": 5, "DDR_CD": 4, "CPU1": 26, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 201}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 353.031, "power": 111, "CPU0": 102, "DDR_AB": 5, "DDR_CD": 4, "CPU1": 27, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 230}, "tvmgen_default_fused_layout_transform_1": {"time": 179.062, "power": 87, "CPU0": 81, "DDR_AB": 3, "DDR_CD": 3, "CPU1": 25, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 205}}, "data layout": "NCHW", "batch_size": 512, "time": 353.031, "power": 108.5, "memory": -1, "relay": "free_var %data: Tensor[(512, 48, 228, 228), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[4, 4], channels=24, kernel_size=[1, 1])\n"}