{"filters": 480, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [4, 4], "groups": 1, "input shape": [null, 75, 75, 80], "output shape": [null, 75, 75, 480], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 1.84281, "power": 25, "CPU0": 23, "DDR_AB": 1, "DDR_CD": 1, "CPU1": 14, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 138}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 46.798, "power": 127, "CPU0": 121, "DDR_AB": 3, "DDR_CD": 3, "CPU1": 26, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 236}, "tvmgen_default_fused_layout_transform_1": {"time": 18.5621, "power": 89, "CPU0": 81, "DDR_AB": 4, "DDR_CD": 4, "CPU1": 26, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 209}}, "data layout": "NCHW", "batch_size": 32, "time": 46.798, "power": 106.5, "memory": -1, "relay": "free_var %data: Tensor[(32, 80, 75, 75), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[4, 4], channels=480, kernel_size=[1, 1])\n"}