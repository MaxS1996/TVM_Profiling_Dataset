{"filters": 40, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [4, 4], "groups": 1, "input shape": [null, 28, 28, 144], "output shape": [null, 28, 28, 40], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 1.5543200000000001, "power": 66, "CPU0": 57, "DDR_AB": 5, "DDR_CD": 4, "CPU1": 20, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 182}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 4.767989999999999, "power": 99, "CPU0": 95, "DDR_AB": 3, "DDR_CD": 2, "CPU1": 22, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 214}, "tvmgen_default_fused_layout_transform_1": {"time": 0.600466, "power": 26, "CPU0": 25, "DDR_AB": 1, "DDR_CD": 0, "CPU1": 21, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 160}}, "data layout": "NCHW", "batch_size": 128, "time": 4.767989999999999, "power": 95.0, "memory": -1, "relay": "free_var %data: Tensor[(128, 144, 28, 28), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[4, 4], channels=40, kernel_size=[1, 1])\n"}