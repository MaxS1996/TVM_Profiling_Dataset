{"filters": 160, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [4, 4], "groups": 1, "input shape": [null, 38, 38, 960], "output shape": [null, 38, 38, 160], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 54.0068, "power": 54, "CPU0": 48, "DDR_AB": 3, "DDR_CD": 4, "CPU1": 17, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 170}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 759.244, "power": 111, "CPU0": 102, "DDR_AB": 4, "DDR_CD": 5, "CPU1": 26, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 217}, "tvmgen_default_fused_layout_transform_1": {"time": 12.3431, "power": 20, "CPU0": 20, "DDR_AB": 0, "DDR_CD": 0, "CPU1": 14, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 153}}, "data layout": "NCHW", "batch_size": 256, "time": 759.244, "power": 109.0, "memory": -1, "relay": "free_var %data: Tensor[(256, 960, 38, 38), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[4, 4], channels=160, kernel_size=[1, 1])\n"}