{"filters": 64, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [8, 8], "groups": 1, "input shape": [null, 35, 35, 288], "output shape": [null, 35, 35, 64], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 6.548240000000001, "power": 53, "CPU0": 46, "DDR_AB": 3, "DDR_CD": 4, "CPU1": 20, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 170}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 28.1111, "power": 81, "CPU0": 78, "DDR_AB": 1, "DDR_CD": 2, "CPU1": 24, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 184}, "tvmgen_default_fused_layout_transform_1": {"time": 1.86975, "power": 17, "CPU0": 17, "DDR_AB": 0, "DDR_CD": 1, "CPU1": 18, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 147}}, "data layout": "NCHW", "batch_size": 128, "time": 28.1111, "power": 77.5, "memory": -1, "relay": "free_var %data: Tensor[(128, 288, 35, 35), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[8, 8], channels=64, kernel_size=[1, 1])\n"}