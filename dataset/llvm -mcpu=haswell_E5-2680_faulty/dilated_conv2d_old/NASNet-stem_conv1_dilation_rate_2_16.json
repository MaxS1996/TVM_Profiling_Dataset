{"filters": 96, "kernel": [3, 3], "strides": [2, 2], "padding": "valid", "dilation": [2, 2], "groups": 1, "input shape": [null, 331, 331, 3], "output shape": [null, 164, 164, 96], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 1.07959, "power": 20, "CPU0": 19, "DDR_AB": 1, "DDR_CD": 0, "CPU1": 20, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 151}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 7.22532, "power": 122, "CPU0": 113, "DDR_AB": 5, "DDR_CD": 4, "CPU1": 31, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 230}, "tvmgen_default_fused_layout_transform_1": {"time": 10.3894, "power": 105, "CPU0": 96, "DDR_AB": 5, "DDR_CD": 4, "CPU1": 29, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 213}}, "data layout": "NCHW", "batch_size": 16, "time": 7.22532, "power": 101.5, "memory": -1, "relay": "free_var %data: Tensor[(16, 3, 331, 331), float32];\nnn.conv2d(%data, meta[relay.Constant][0], strides=[2, 2], padding=[0, 0, 0, 0], dilation=[2, 2], channels=96, kernel_size=[3, 3])\n"}