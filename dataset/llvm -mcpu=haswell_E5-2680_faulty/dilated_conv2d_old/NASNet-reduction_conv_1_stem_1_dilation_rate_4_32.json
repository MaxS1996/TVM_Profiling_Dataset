{"filters": 42, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [4, 4], "groups": 1, "input shape": [null, 165, 165, 96], "output shape": [null, 165, 165, 42], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 12.794, "power": 56, "CPU0": 49, "DDR_AB": 4, "DDR_CD": 3, "CPU1": 20, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 170}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 40.7712, "power": 102, "CPU0": 92, "DDR_AB": 5, "DDR_CD": 5, "CPU1": 23, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 221}, "tvmgen_default_fused_layout_transform_1": {"time": 8.52789, "power": 42, "CPU0": 38, "DDR_AB": 2, "DDR_CD": 2, "CPU1": 16, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 179}}, "data layout": "NCHW", "batch_size": 32, "time": 40.7712, "power": 98.0, "memory": -1, "relay": "free_var %data: Tensor[(32, 96, 165, 165), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[4, 4], channels=42, kernel_size=[1, 1])\n"}