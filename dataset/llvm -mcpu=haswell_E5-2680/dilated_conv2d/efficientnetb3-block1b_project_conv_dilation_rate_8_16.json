{"filters": 24, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [8, 8], "groups": 1, "input shape": [null, 150, 150, 24], "output shape": [null, 150, 150, 24], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 0.9457019999999999, "power": 104, "CPU0": 91, "DDR_AB": 7, "DDR_CD": 6, "CPU1": 28, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 208}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 2.91128, "power": 128, "CPU0": 116, "DDR_AB": 7, "DDR_CD": 6, "CPU1": 31, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 236}, "tvmgen_default_fused_layout_transform_1": {"time": 2.09182, "power": 121, "CPU0": 109, "DDR_AB": 7, "DDR_CD": 6, "CPU1": 31, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 228}}, "data layout": "NCHW", "batch_size": 16, "time": 2.91128, "power": 128.0, "memory": -1, "relay": "free_var %data: Tensor[(16, 24, 150, 150), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[8, 8], channels=24, kernel_size=[1, 1])\n"}