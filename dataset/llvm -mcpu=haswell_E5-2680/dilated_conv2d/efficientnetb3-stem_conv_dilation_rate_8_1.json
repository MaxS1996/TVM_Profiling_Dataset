{"filters": 40, "kernel": [3, 3], "strides": [2, 2], "padding": "valid", "dilation": [8, 8], "groups": 1, "input shape": [null, 301, 301, 3], "output shape": [null, 143, 143, 40], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 0.0202939, "power": 62, "CPU0": 59, "DDR_AB": 2, "DDR_CD": 1, "CPU1": 17, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 161}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 0.11088500000000001, "power": 128, "CPU0": 125, "DDR_AB": 2, "DDR_CD": 1, "CPU1": 29, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 234}, "tvmgen_default_fused_layout_transform_1": {"time": 0.147741, "power": 115, "CPU0": 112, "DDR_AB": 2, "DDR_CD": 1, "CPU1": 27, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 217}}, "data layout": "NCHW", "batch_size": 1, "time": 0.11088500000000001, "power": 128.0, "memory": -1, "relay": "free_var %data: Tensor[(1, 3, 301, 301), float32];\nnn.conv2d(%data, meta[relay.Constant][0], strides=[2, 2], padding=[0, 0, 0, 0], dilation=[8, 8], channels=40, kernel_size=[3, 3])\n"}