{"filters": 24, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [2, 2], "groups": 1, "input shape": [null, 150, 150, 24], "output shape": [null, 150, 150, 24], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 0.846015, "power": 94, "CPU0": 87, "DDR_AB": 4, "DDR_CD": 3, "CPU1": 25, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 213}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 1.12057, "power": 117, "CPU0": 115, "DDR_AB": 2, "DDR_CD": 1, "CPU1": 29, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 229}, "tvmgen_default_fused_layout_transform_1": {"time": 0.8944540000000001, "power": 122, "CPU0": 116, "DDR_AB": 4, "DDR_CD": 2, "CPU1": 31, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 240}}, "data layout": "NCHW", "batch_size": 8, "time": 1.12057, "power": 117.0, "memory": -1, "relay": "free_var %data: Tensor[(8, 24, 150, 150), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[2, 2], channels=24, kernel_size=[1, 1])\n"}