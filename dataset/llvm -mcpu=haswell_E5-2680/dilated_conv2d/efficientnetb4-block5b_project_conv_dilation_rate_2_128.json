{"filters": 160, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [2, 2], "groups": 1, "input shape": [null, 24, 24, 960], "output shape": [null, 24, 24, 160], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 10.5015, "power": 25, "CPU0": 24, "DDR_AB": 1, "DDR_CD": 0, "CPU1": 21, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 146}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 108.32, "power": 97, "CPU0": 94, "DDR_AB": 2, "DDR_CD": 1, "CPU1": 28, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 204}, "tvmgen_default_fused_layout_transform_1": {"time": 2.19857, "power": 18, "CPU0": 17, "DDR_AB": 1, "DDR_CD": 0, "CPU1": 20, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 119}}, "data layout": "NCHW", "batch_size": 128, "time": 108.32, "power": 92.5, "memory": -1, "relay": "free_var %data: Tensor[(128, 960, 24, 24), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[2, 2], channels=160, kernel_size=[1, 1])\n"}