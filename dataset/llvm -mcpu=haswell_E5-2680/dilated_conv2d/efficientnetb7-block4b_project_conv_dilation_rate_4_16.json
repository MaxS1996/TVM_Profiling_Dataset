{"filters": 160, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [4, 4], "groups": 1, "input shape": [null, 38, 38, 960], "output shape": [null, 38, 38, 160], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 2.83348, "power": 25, "CPU0": 23, "DDR_AB": 1, "DDR_CD": 1, "CPU1": 15, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 149}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 46.7737, "power": 112, "CPU0": 104, "DDR_AB": 4, "DDR_CD": 4, "CPU1": 27, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 219}, "tvmgen_default_fused_layout_transform_1": {"time": 0.496253, "power": 29, "CPU0": 27, "DDR_AB": 1, "DDR_CD": 1, "CPU1": 17, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 114}}, "data layout": "NCHW", "batch_size": 16, "time": 46.7737, "power": 92.0, "memory": -1, "relay": "free_var %data: Tensor[(16, 960, 38, 38), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[4, 4], channels=160, kernel_size=[1, 1])\n"}