{"filters": 256, "kernel": [1, 1], "strides": [1, 1], "padding": "valid", "dilation": [2, 2], "groups": 1, "input shape": [null, 28, 28, 64], "output shape": [null, 28, 28, 256], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 0.0187212, "power": 22, "CPU0": 22, "DDR_AB": 0, "DDR_CD": 0, "CPU1": 23, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 140}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 0.799688, "power": 120, "CPU0": 120, "DDR_AB": 0, "DDR_CD": 0, "CPU1": 30, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 226}, "tvmgen_default_fused_layout_transform_1": {"time": 0.123854, "power": 70, "CPU0": 69, "DDR_AB": 1, "DDR_CD": 0, "CPU1": 24, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 200}}, "data layout": "NCHW", "batch_size": 8, "time": 0.799688, "power": 120.0, "memory": -1, "relay": "free_var %data: Tensor[(8, 64, 28, 28), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[2, 2], channels=256, kernel_size=[1, 1])\n"}