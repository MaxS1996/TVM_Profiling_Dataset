{"filters": 960, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [2, 2], "groups": 1, "input shape": [null, 38, 38, 160], "output shape": [null, 38, 38, 960], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 0.352568, "power": 21, "CPU0": 21, "DDR_AB": 0, "DDR_CD": 0, "CPU1": 18, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 119}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 10.6898, "power": 121, "CPU0": 120, "DDR_AB": 1, "DDR_CD": 0, "CPU1": 30, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 233}, "tvmgen_default_fused_layout_transform_1": {"time": 2.55493, "power": 80, "CPU0": 75, "DDR_AB": 4, "DDR_CD": 2, "CPU1": 22, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 202}}, "data layout": "NCHW", "batch_size": 8, "time": 10.6898, "power": 121.0, "memory": -1, "relay": "free_var %data: Tensor[(8, 160, 38, 38), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[2, 2], channels=960, kernel_size=[1, 1])\n"}