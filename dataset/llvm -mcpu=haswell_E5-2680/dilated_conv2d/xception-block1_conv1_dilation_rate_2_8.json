{"filters": 32, "kernel": [3, 3], "strides": [2, 2], "padding": "valid", "dilation": [2, 2], "groups": 1, "input shape": [null, 299, 299, 3], "output shape": [null, 148, 148, 32], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 0.21935, "power": 111, "CPU0": 110, "DDR_AB": 1, "DDR_CD": 0, "CPU1": 30, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 221}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 0.757359, "power": 121, "CPU0": 119, "DDR_AB": 2, "DDR_CD": 0, "CPU1": 27, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 232}, "tvmgen_default_fused_layout_transform_1": {"time": 1.18377, "power": 129, "CPU0": 121, "DDR_AB": 5, "DDR_CD": 3, "CPU1": 30, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 242}}, "data layout": "NCHW", "batch_size": 8, "time": 0.757359, "power": 121.0, "memory": -1, "relay": "free_var %data: Tensor[(8, 3, 299, 299), float32];\nnn.conv2d(%data, meta[relay.Constant][0], strides=[2, 2], padding=[0, 0, 0, 0], dilation=[2, 2], channels=32, kernel_size=[3, 3])\n"}