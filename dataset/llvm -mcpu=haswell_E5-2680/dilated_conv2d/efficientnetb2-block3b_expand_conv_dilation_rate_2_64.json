{"filters": 288, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [2, 2], "groups": 1, "input shape": [null, 33, 33, 48], "output shape": [null, 33, 33, 288], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 0.649331, "power": 17, "CPU0": 17, "DDR_AB": 0, "DDR_CD": 0, "CPU1": 20, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 123}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 5.76409, "power": 99, "CPU0": 94, "DDR_AB": 3, "DDR_CD": 2, "CPU1": 27, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 207}, "tvmgen_default_fused_layout_transform_1": {"time": 4.4395, "power": 95, "CPU0": 88, "DDR_AB": 4, "DDR_CD": 3, "CPU1": 33, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 211}}, "data layout": "NCHW", "batch_size": 64, "time": 5.76409, "power": 94.0, "memory": -1, "relay": "free_var %data: Tensor[(64, 48, 33, 33), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[2, 2], channels=288, kernel_size=[1, 1])\n"}