{"filters": 16, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [8, 8], "groups": 1, "input shape": [null, 120, 120, 16], "output shape": [null, 120, 120, 16], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 0.627054, "power": 57, "CPU0": 53, "DDR_AB": 2, "DDR_CD": 3, "CPU1": 19, "DDR_EF": 1, "DDR_GH": 1, "BLADE": 189}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 0.895037, "power": 118, "CPU0": 113, "DDR_AB": 2, "DDR_CD": 3, "CPU1": 29, "DDR_EF": 1, "DDR_GH": 1, "BLADE": 216}, "tvmgen_default_fused_layout_transform_1": {"time": 0.568877, "power": 91, "CPU0": 86, "DDR_AB": 2, "DDR_CD": 3, "CPU1": 20, "DDR_EF": 1, "DDR_GH": 1, "BLADE": 205}}, "data layout": "NCHW", "batch_size": 16, "time": 0.895037, "power": 101.0, "memory": -1, "relay": "free_var %data: Tensor[(16, 16, 120, 120), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[8, 8], channels=16, kernel_size=[1, 1])\n"}