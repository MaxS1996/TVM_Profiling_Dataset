{"filters": 48, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [4, 4], "groups": 1, "input shape": [null, 33, 33, 144], "output shape": [null, 33, 33, 48], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 1.93428, "power": 77, "CPU0": 68, "DDR_AB": 5, "DDR_CD": 5, "CPU1": 21, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 192}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 2.83022, "power": 111, "CPU0": 105, "DDR_AB": 3, "DDR_CD": 3, "CPU1": 28, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 232}, "tvmgen_default_fused_layout_transform_1": {"time": 0.45969, "power": 18, "CPU0": 17, "DDR_AB": 1, "DDR_CD": 0, "CPU1": 15, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 161}}, "data layout": "NCHW", "batch_size": 64, "time": 2.83022, "power": 99.5, "memory": -1, "relay": "free_var %data: Tensor[(64, 144, 33, 33), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[4, 4], channels=48, kernel_size=[1, 1])\n"}