{"filters": 288, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [8, 8], "groups": 1, "input shape": [null, 38, 38, 48], "output shape": [null, 38, 38, 288], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 0.414332, "power": 30, "CPU0": 27, "DDR_AB": 2, "DDR_CD": 2, "CPU1": 17, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 127}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 7.02304, "power": 132, "CPU0": 124, "DDR_AB": 4, "DDR_CD": 4, "CPU1": 30, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 237}, "tvmgen_default_fused_layout_transform_1": {"time": 3.01284, "power": 100, "CPU0": 88, "DDR_AB": 6, "DDR_CD": 6, "CPU1": 25, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 207}}, "data layout": "NCHW", "batch_size": 32, "time": 7.02304, "power": 132.0, "memory": -1, "relay": "free_var %data: Tensor[(32, 48, 38, 38), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[8, 8], channels=288, kernel_size=[1, 1])\n"}