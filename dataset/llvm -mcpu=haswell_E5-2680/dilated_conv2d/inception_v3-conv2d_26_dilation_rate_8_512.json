{"filters": 64, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [8, 8], "groups": 1, "input shape": [null, 35, 35, 288], "output shape": [null, 35, 35, 64], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 27.2996, "power": 55, "CPU0": 49, "DDR_AB": 3, "DDR_CD": 4, "CPU1": 17, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 170}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 119.222, "power": 87, "CPU0": 83, "DDR_AB": 2, "DDR_CD": 2, "CPU1": 21, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 190}, "tvmgen_default_fused_layout_transform_1": {"time": 8.31174, "power": 22, "CPU0": 20, "DDR_AB": 1, "DDR_CD": 1, "CPU1": 14, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 159}}, "data layout": "NCHW", "batch_size": 512, "time": 119.222, "power": 83.0, "memory": -1, "relay": "free_var %data: Tensor[(512, 288, 35, 35), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[8, 8], channels=64, kernel_size=[1, 1])\n"}