{"filters": 240, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [2, 2], "groups": 1, "input shape": [null, 114, 114, 40], "output shape": [null, 114, 114, 240], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 0.832561, "power": 33, "CPU0": 33, "DDR_AB": 0, "DDR_CD": 0, "CPU1": 27, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 172}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 7.05429, "power": 132, "CPU0": 128, "DDR_AB": 3, "DDR_CD": 1, "CPU1": 30, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 243}, "tvmgen_default_fused_layout_transform_1": {"time": 6.26405, "power": 120, "CPU0": 112, "DDR_AB": 5, "DDR_CD": 3, "CPU1": 30, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 235}}, "data layout": "NCHW", "batch_size": 8, "time": 7.05429, "power": 132.0, "memory": -1, "relay": "free_var %data: Tensor[(8, 40, 114, 114), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[2, 2], channels=240, kernel_size=[1, 1])\n"}