{"filters": 384, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [8, 8], "groups": 1, "input shape": [null, 14, 14, 64], "output shape": [null, 14, 14, 384], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 1.34168, "power": 24, "CPU0": 23, "DDR_AB": 0, "DDR_CD": 1, "CPU1": 17, "DDR_EF": 1, "DDR_GH": 1, "BLADE": 135}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 20.4592, "power": 125, "CPU0": 120, "DDR_AB": 2, "DDR_CD": 3, "CPU1": 28, "DDR_EF": 1, "DDR_GH": 1, "BLADE": 226}, "tvmgen_default_fused_layout_transform_1": {"time": 8.59717, "power": 69, "CPU0": 61, "DDR_AB": 3, "DDR_CD": 5, "CPU1": 20, "DDR_EF": 1, "DDR_GH": 1, "BLADE": 186}}, "data layout": "NCHW", "batch_size": 512, "time": 20.4592, "power": 100.0, "memory": -1, "relay": "free_var %data: Tensor[(512, 64, 14, 14), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[8, 8], channels=384, kernel_size=[1, 1])\n"}