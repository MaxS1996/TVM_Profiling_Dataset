{"filters": 1920, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [2, 2], "groups": 1, "input shape": [null, 8, 8, 320], "output shape": [null, 8, 8, 1920], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 0.0139346, "power": 23, "CPU0": 23, "DDR_AB": 0, "DDR_CD": 0, "CPU1": 17, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 106}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 1.32033, "power": 116, "CPU0": 116, "DDR_AB": 0, "DDR_CD": 0, "CPU1": 26, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 223}, "tvmgen_default_fused_layout_transform_1": {"time": 0.060585099999999996, "power": 29, "CPU0": 29, "DDR_AB": 0, "DDR_CD": 0, "CPU1": 23, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 163}}, "data layout": "NCHW", "batch_size": 8, "time": 1.32033, "power": 116.0, "memory": -1, "relay": "free_var %data: Tensor[(8, 320, 8, 8), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[2, 2], channels=1920, kernel_size=[1, 1])\n"}