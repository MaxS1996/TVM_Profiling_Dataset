{"filters": 32, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [4, 4], "groups": 1, "input shape": [null, 300, 300, 32], "output shape": [null, 300, 300, 32], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 13.4314, "power": 83, "CPU0": 75, "DDR_AB": 5, "DDR_CD": 5, "CPU1": 26, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 202}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 39.5863, "power": 107, "CPU0": 97, "DDR_AB": 5, "DDR_CD": 5, "CPU1": 24, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 221}, "tvmgen_default_fused_layout_transform_1": {"time": 49.38590000000001, "power": 98, "CPU0": 87, "DDR_AB": 5, "DDR_CD": 6, "CPU1": 24, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 207}}, "data layout": "NCHW", "batch_size": 32, "time": 39.5863, "power": 106.0, "memory": -1, "relay": "free_var %data: Tensor[(32, 32, 300, 300), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[4, 4], channels=32, kernel_size=[1, 1])\n"}