{"filters": 32, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [4, 4], "groups": 1, "input shape": [null, 95, 95, 192], "output shape": [null, 95, 95, 32], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 134.95, "power": 82, "CPU0": 74, "DDR_AB": 4, "DDR_CD": 4, "CPU1": 25, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 198}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 260.907, "power": 110, "CPU0": 102, "DDR_AB": 4, "DDR_CD": 4, "CPU1": 27, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 230}, "tvmgen_default_fused_layout_transform_1": {"time": 32.0501, "power": 42, "CPU0": 40, "DDR_AB": 1, "DDR_CD": 1, "CPU1": 18, "DDR_EF": 0, "DDR_GH": 0, "BLADE": 174}}, "data layout": "NCHW", "batch_size": 512, "time": 260.907, "power": 109.0, "memory": -1, "relay": "free_var %data: Tensor[(512, 192, 95, 95), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[4, 4], channels=32, kernel_size=[1, 1])\n"}