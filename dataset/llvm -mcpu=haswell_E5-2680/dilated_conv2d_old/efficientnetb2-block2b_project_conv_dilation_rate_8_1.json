{"filters": 24, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [8, 8], "groups": 1, "input shape": [null, 65, 65, 144], "output shape": [null, 65, 65, 24], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 0.039786300000000004, "power": 60, "CPU0": 59, "DDR_AB": 0, "DDR_CD": 2, "CPU1": 18, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 167}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 0.0710208, "power": 97, "CPU0": 95, "DDR_AB": 0, "DDR_CD": 2, "CPU1": 19, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 201}, "tvmgen_default_fused_layout_transform_1": {"time": 0.0193584, "power": 42, "CPU0": 40, "DDR_AB": 0, "DDR_CD": 2, "CPU1": 17, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 161}}, "data layout": "NCHW", "batch_size": 1, "time": 0.0710208, "power": 96.0, "memory": -1, "relay": "free_var %data: Tensor[(1, 144, 65, 65), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[8, 8], channels=24, kernel_size=[1, 1])\n"}