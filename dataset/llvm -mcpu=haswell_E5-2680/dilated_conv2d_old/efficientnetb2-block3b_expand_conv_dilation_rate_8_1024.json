{"filters": 288, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [8, 8], "groups": 1, "input shape": [null, 33, 33, 48], "output shape": [null, 33, 33, 288], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 7.89308, "power": 29, "CPU0": 26, "DDR_AB": 1, "DDR_CD": 2, "CPU1": 17, "DDR_EF": 1, "DDR_GH": 1, "BLADE": 149}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 96.0149, "power": 114, "CPU0": 107, "DDR_AB": 3, "DDR_CD": 4, "CPU1": 26, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 219}, "tvmgen_default_fused_layout_transform_1": {"time": 69.3218, "power": 107, "CPU0": 96, "DDR_AB": 5, "DDR_CD": 6, "CPU1": 26, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 212}}, "data layout": "NCHW", "batch_size": 1024, "time": 96.0149, "power": 112.0, "memory": -1, "relay": "free_var %data: Tensor[(1024, 48, 33, 33), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[8, 8], channels=288, kernel_size=[1, 1])\n"}