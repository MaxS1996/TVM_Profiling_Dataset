{"filters": 40, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [2, 2], "groups": 1, "input shape": [null, 114, 114, 240], "output shape": [null, 114, 114, 40], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 30.0734, "power": 73, "CPU0": 65, "DDR_AB": 4, "DDR_CD": 4, "CPU1": 25, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 183}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 84.7146, "power": 102, "CPU0": 95, "DDR_AB": 4, "DDR_CD": 3, "CPU1": 29, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 212}, "tvmgen_default_fused_layout_transform_1": {"time": 7.31761, "power": 24, "CPU0": 23, "DDR_AB": 1, "DDR_CD": 0, "CPU1": 20, "DDR_EF": 0, "DDR_GH": 1, "BLADE": 161}}, "data layout": "NCHW", "batch_size": 64, "time": 84.7146, "power": 100.0, "memory": -1, "relay": "free_var %data: Tensor[(64, 240, 114, 114), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[2, 2], channels=40, kernel_size=[1, 1])\n"}