{"filters": 32, "kernel": [3, 3], "strides": [2, 2], "padding": "valid", "dilation": [8, 8], "groups": 1, "input shape": [null, 241, 241, 3], "output shape": [null, 113, 113, 32], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_layout_transform": {"time": 0.806809, "power": 28, "CPU0": 25, "DDR_AB": 1, "DDR_CD": 2, "CPU1": 17, "DDR_EF": 1, "DDR_GH": 1, "BLADE": 151}, "tvmgen_default_fused_nn_contrib_conv2d_NCHWc": {"time": 8.06916, "power": 77, "CPU0": 71, "DDR_AB": 2, "DDR_CD": 4, "CPU1": 19, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 191}, "tvmgen_default_fused_layout_transform_1": {"time": 3.15792, "power": 75, "CPU0": 68, "DDR_AB": 3, "DDR_CD": 4, "CPU1": 20, "DDR_EF": 1, "DDR_GH": 0, "BLADE": 194}}, "data layout": "NCHW", "batch_size": 32, "time": 8.06916, "power": 70.0, "memory": -1, "relay": "free_var %data: Tensor[(32, 3, 241, 241), float32];\nnn.conv2d(%data, meta[relay.Constant][0], strides=[2, 2], padding=[0, 0, 0, 0], dilation=[8, 8], channels=32, kernel_size=[3, 3])\n"}