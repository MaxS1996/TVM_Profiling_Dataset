{"filters": 384, "kernel": [3, 3], "strides": [1, 1], "padding": "same", "dilation": [1, 1], "groups": 1, "input shape": [null, 8, 8, 448], "output shape": [null, 6, 6, 384], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_nn_conv2d": {"time": 20.256, "nvml:::Tesla_K80:device_0:power": 154012, "nvml:::Tesla_K80:device_0:gpu_utilization": 100, "nvml:::Tesla_K80:device_0:memory_utilization": 38, "nvml:::Tesla_K80:device_0:graphics_clock": 875, "nvml:::Tesla_K80:device_0:sm_clock": 875, "nvml:::Tesla_K80:device_0:memory_clock": 2505, "nvml:::Tesla_K80:device_0:allocated_memory": 98566144}}, "data layout": "NCHW", "kernel layout": "OIHW", "batch_size": 128, "time": 20.256, "power": 152.354, "memory": 0.091796875, "relay": "free_var %data: Tensor[(128, 448, 8, 8), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], channels=384, kernel_size=[3, 3])\n"}