{"filters": 256, "kernel": [3, 3], "strides": [1, 1], "padding": "same", "dilation": [1, 1], "groups": 1, "input shape": [null, 35, 35, 256], "output shape": [null, 33, 33, 256], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_nn_conv2d": {"time": 189.39800000000002, "nvml:::Tesla_K80:device_0:power": 152830, "nvml:::Tesla_K80:device_0:gpu_utilization": 100, "nvml:::Tesla_K80:device_0:memory_utilization": 43, "nvml:::Tesla_K80:device_0:graphics_clock": 784, "nvml:::Tesla_K80:device_0:sm_clock": 784, "nvml:::Tesla_K80:device_0:memory_clock": 2505, "nvml:::Tesla_K80:device_0:allocated_memory": 376176640}}, "data layout": "NCHW", "kernel layout": "OIHW", "batch_size": 128, "time": 189.39800000000002, "power": 152.83, "memory": 0.350341796875, "relay": "free_var %data: Tensor[(128, 256, 35, 35), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], channels=256, kernel_size=[3, 3])\n"}