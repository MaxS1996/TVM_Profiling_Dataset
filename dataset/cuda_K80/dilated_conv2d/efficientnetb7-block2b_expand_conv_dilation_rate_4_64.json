{"filters": 288, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [4, 4], "groups": 1, "input shape": [null, 150, 150, 48], "output shape": [null, 150, 150, 288], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_nn_conv2d": {"time": 57.2803, "nvml:::Tesla_K80:device_0:power": 173951, "nvml:::Tesla_K80:device_0:gpu_utilization": 100, "nvml:::Tesla_K80:device_0:memory_utilization": 74, "nvml:::Tesla_K80:device_0:graphics_clock": 836, "nvml:::Tesla_K80:device_0:sm_clock": 836, "nvml:::Tesla_K80:device_0:memory_clock": 2505, "nvml:::Tesla_K80:device_0:allocated_memory": 2007105536}}, "data layout": "NCHW", "batch_size": 64, "time": 57.2803, "power": 170.289, "memory": 1.8692626953125, "relay": "free_var %data: Tensor[(64, 48, 150, 150), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], dilation=[4, 4], channels=288, kernel_size=[1, 1])\n"}