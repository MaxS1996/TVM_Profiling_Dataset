{"filters": 48, "kernel": [3, 3], "strides": [2, 2], "padding": "valid", "dilation": [8, 8], "groups": 1, "input shape": [null, 381, 381, 3], "output shape": [null, 183, 183, 48], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_nn_conv2d": {"time": 18.2333, "nvml:::Tesla_K80:device_0:power": 149922, "nvml:::Tesla_K80:device_0:gpu_utilization": 100, "nvml:::Tesla_K80:device_0:memory_utilization": 17, "nvml:::Tesla_K80:device_0:graphics_clock": 875, "nvml:::Tesla_K80:device_0:sm_clock": 875, "nvml:::Tesla_K80:device_0:memory_clock": 2505, "nvml:::Tesla_K80:device_0:allocated_memory": 333185024}}, "data layout": "NCHW", "batch_size": 32, "time": 18.2333, "power": 146.8915, "memory": 0.310302734375, "relay": "free_var %data: Tensor[(32, 3, 381, 381), float32];\nnn.conv2d(%data, meta[relay.Constant][0], strides=[2, 2], padding=[0, 0, 0, 0], dilation=[8, 8], channels=48, kernel_size=[3, 3])\n"}