{"filters": 32, "kernel": [3, 3], "strides": [2, 2], "padding": "valid", "dilation": [8, 8], "groups": 1, "input shape": [null, 299, 299, 3], "output shape": [null, 142, 142, 32], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_nn_conv2d": {"time": 147.059, "nvml:::Tesla_K80:device_0:power": 121596, "nvml:::Tesla_K80:device_0:gpu_utilization": 100, "nvml:::Tesla_K80:device_0:memory_utilization": 4, "nvml:::Tesla_K80:device_0:graphics_clock": 875, "nvml:::Tesla_K80:device_0:sm_clock": 875, "nvml:::Tesla_K80:device_0:memory_clock": 2505, "nvml:::Tesla_K80:device_0:allocated_memory": 539361280}}, "data layout": "NCHW", "batch_size": 128, "time": 147.059, "power": 121.381, "memory": 0.5023193359375, "relay": "free_var %data: Tensor[(128, 3, 299, 299), float32];\nnn.conv2d(%data, meta[relay.Constant][0], strides=[2, 2], padding=[0, 0, 0, 0], dilation=[8, 8], channels=32, kernel_size=[3, 3])\n"}