{"filters": 384, "kernel": [3, 3], "strides": [1, 1], "padding": "valid", "dilation": [1, 1], "groups": 1, "input shape": [null, 6, 6, 384], "output shape": [null, 4, 4, 384], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_nn_conv2d": {"time": 1.09804, "nvml:::Tesla_K80:device_0:power": 147361, "nvml:::Tesla_K80:device_0:gpu_utilization": 100, "nvml:::Tesla_K80:device_0:memory_utilization": 9, "nvml:::Tesla_K80:device_0:graphics_clock": 875, "nvml:::Tesla_K80:device_0:sm_clock": 875, "nvml:::Tesla_K80:device_0:memory_clock": 2505, "nvml:::Tesla_K80:device_0:allocated_memory": 77987840}}, "data layout": "NCHW", "kernel layout": "OIHW", "batch_size": 16, "time": 1.09804, "power": 146.617, "memory": 0.0726318359375, "relay": "free_var %data: Tensor[(16, 384, 6, 6), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], channels=384, kernel_size=[3, 3])\n"}