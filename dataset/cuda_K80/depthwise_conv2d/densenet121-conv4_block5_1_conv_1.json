{"filters": 384, "kernel": [1, 1], "strides": [1, 1], "padding": "valid", "dilation": [1, 1], "groups": 384, "input shape": [null, 14, 14, 384], "output shape": [null, 14, 14, 384], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_nn_conv2d": {"time": 0.0185141, "nvml:::Tesla_K80:device_0:power": 71535, "nvml:::Tesla_K80:device_0:gpu_utilization": 51, "nvml:::Tesla_K80:device_0:memory_utilization": 13, "nvml:::Tesla_K80:device_0:graphics_clock": 614, "nvml:::Tesla_K80:device_0:sm_clock": 614, "nvml:::Tesla_K80:device_0:memory_clock": 2505, "nvml:::Tesla_K80:device_0:allocated_memory": 71565312}}, "data layout": "NCHW", "batch_size": 1, "time": 0.0185141, "power": 69.705, "memory": 0.066650390625, "relay": "free_var %data: Tensor[(1, 384, 14, 14), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], groups=384, channels=384, kernel_size=[1, 1])\n"}