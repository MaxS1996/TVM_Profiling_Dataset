{"filters": 288, "kernel": [3, 3], "strides": [2, 2], "padding": "valid", "dilation": [1, 1], "groups": 288, "input shape": [null, 8, 8, 288], "output shape": [null, 3, 3, 288], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_nn_conv2d": {"time": 0.11175099999999999, "nvml:::Tesla_K80:device_0:power": 107351, "nvml:::Tesla_K80:device_0:gpu_utilization": 96, "nvml:::Tesla_K80:device_0:memory_utilization": 2, "nvml:::Tesla_K80:device_0:graphics_clock": 875, "nvml:::Tesla_K80:device_0:sm_clock": 875, "nvml:::Tesla_K80:device_0:memory_clock": 2505, "nvml:::Tesla_K80:device_0:allocated_memory": 72744960}}, "data layout": "NCHW", "batch_size": 16, "time": 0.11175099999999999, "power": 105.584, "memory": 0.0677490234375, "relay": "free_var %data: Tensor[(16, 288, 8, 8), float32];\nnn.conv2d(%data, meta[relay.Constant][0], strides=[2, 2], padding=[0, 0, 0, 0], groups=288, channels=288, kernel_size=[3, 3])\n"}