{"filters": 288, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [1, 1], "groups": 288, "input shape": [null, 38, 38, 288], "output shape": [null, 38, 38, 288], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_nn_conv2d": {"time": 35.344100000000005, "nvml:::Tesla_K80:device_0:power": 100270, "nvml:::Tesla_K80:device_0:gpu_utilization": 100, "nvml:::Tesla_K80:device_0:memory_utilization": 10, "nvml:::Tesla_K80:device_0:graphics_clock": 875, "nvml:::Tesla_K80:device_0:sm_clock": 875, "nvml:::Tesla_K80:device_0:memory_clock": 2505, "nvml:::Tesla_K80:device_0:allocated_memory": 497549312}}, "data layout": "NCHW", "batch_size": 128, "time": 35.344100000000005, "power": 99.2265, "memory": 0.46337890625, "relay": "free_var %data: Tensor[(128, 288, 38, 38), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], groups=288, channels=288, kernel_size=[1, 1])\n"}