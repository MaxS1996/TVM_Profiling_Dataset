{"filters": 344, "kernel": [1, 1], "strides": [1, 1], "padding": "same", "dilation": [1, 1], "groups": 344, "input shape": [null, 17, 17, 344], "output shape": [null, 17, 17, 344], "output dtype": "float32", "compute dtype": "float32", "workload": "conv2d", "layers": {"param": {"time": 0.0}, "tvmgen_default_fused_nn_conv2d": {"time": 0.456603, "nvml:::Tesla_K80:device_0:power": 109702, "nvml:::Tesla_K80:device_0:gpu_utilization": 100, "nvml:::Tesla_K80:device_0:memory_utilization": 19, "nvml:::Tesla_K80:device_0:graphics_clock": 875, "nvml:::Tesla_K80:device_0:sm_clock": 875, "nvml:::Tesla_K80:device_0:memory_clock": 2505, "nvml:::Tesla_K80:device_0:allocated_memory": 84410368}}, "data layout": "NCHW", "batch_size": 16, "time": 0.456603, "power": 108.009, "memory": 0.07861328125, "relay": "free_var %data: Tensor[(16, 344, 17, 17), float32];\nnn.conv2d(%data, meta[relay.Constant][0], padding=[0, 0, 0, 0], groups=344, channels=344, kernel_size=[1, 1])\n"}